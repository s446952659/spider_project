# -*- coding: utf-8 -*-
import scrapy
import datetime
import pandas as pd
import json
from Astock.items import ForecastsItem


class ForecastsSpider(scrapy.Spider):
    name = 'Forecasts'
    allowed_domains = ['stockpage.10jqka.com.cn']
    start_urls = ['http://basic.10jqka.com.cn/000001/worth.html#stockpage']
    crawl_time = datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')
    # A_stocks = pd.read_excel('Astock/spiders/data_source_th/Astocks10.xlsx',dtype={'code':str,'market':str})
    #A_stocks = pd.read_excel('Astock/spiders/data_source_th/Astocks.xlsx', dtype={'code': str, 'market': str})


    def parse(self, response):
        stock_code = 'SZ000001'
        stock_market = '1201'
        stock_name = '平安银行'
        eper_share = []#预测年报每股收益
        etrs = response.xpath("//div[@class='clearfix']//div[1]/table[@class='m_table m_hl']//tbody//tr")
        for tr in etrs:
            eyear = tr.xpath(".//th/text()").get()
            einstitutions = tr.xpath(".//td[1]/text()").get()#预测机构数
            emin = tr.xpath(".//td[2]/text()").get()
            emean = tr.xpath(".//td[3]/text()").get()
            emax = tr.xpath(".//td[4]/text()").get()
            eindust_average = tr.xpath(".//td[5]/text()").get()#行业平均数
            edper_share = {'eyear':eyear,'einstitutions':einstitutions,'emin':emin,'emean':emean,
                           'emax':emax,'eindust_average':eindust_average}
            eper_share.append(edper_share)
        profit = []  #预测年报净利润
        ptrs = response.xpath("//div[@class='clearfix']//div[2]/table[@class='m_table m_hl']//tbody//tr")
        for tr in ptrs:
            pyear = tr.xpath(".//th/text()").get()
            pinstitutions = tr.xpath(".//td[1]/text()").get()#预测机构数
            pmin = tr.xpath(".//td[2]/text()").get()
            pmean = tr.xpath(".//td[3]/text()").get()
            pmax = tr.xpath(".//td[4]/text()").get()
            pindust_average = tr.xpath(".//td[5]/text()").get()#行业平均数
            pdper_share = {'eyear':pyear,'einstitutions':pinstitutions,'emin':pmin,'emean':pmean,
                           'emax':pmax,'eindust_average':pindust_average}
            profit.append(pdper_share)
        item = ForecastsItem(stock_code=stock_code,stock_market=stock_market,stock_name=stock_name,
                             eper_share=json.dumps(eper_share,ensure_ascii=False),profit=json.dumps(profit,ensure_ascii=False),
                             crawl_time=self.crawl_time)
        yield item
        for i in self.A_stocks.index:
            stock_code = self.A_stocks['code'][i]
            stock_market = self.A_stocks['market'][i]
            stock_name = self.A_stocks['name'][i]
            url = 'http://basic.10jqka.com.cn/%s/worth.html#stockpage' % stock_code
            yield scrapy.Request(url=url, callback=self.parse_next, dont_filter=True,
                                 meta={"info": (stock_code, stock_market, stock_name)})


    def parse_next(self,response):
        stock_code,stock_market,stock_name = response.meta.get('info')
        eper_share = []  # 预测年报每股收益
        etrs = response.xpath("//div[@class='clearfix']//div[1]/table[@class='m_table m_hl']//tbody//tr")
        for tr in etrs:
            eyear = tr.xpath(".//th/text()").get()
            einstitutions = tr.xpath(".//td[1]/text()").get()  # 预测机构数
            emin = tr.xpath(".//td[2]/text()").get()
            emean = tr.xpath(".//td[3]/text()").get()
            emax = tr.xpath(".//td[4]/text()").get()
            eindust_average = tr.xpath(".//td[5]/text()").get()  # 行业平均数
            edper_share = {'eyear': eyear, 'einstitutions': einstitutions, 'emin': emin, 'emean': emean,
                           'emax': emax, 'eindust_average': eindust_average}
            eper_share.append(edper_share)
        profit = []  # 预测年报净利润
        ptrs = response.xpath("//div[@class='clearfix']//div[2]/table[@class='m_table m_hl']//tbody//tr")
        for tr in ptrs:
            pyear = tr.xpath(".//th/text()").get()
            pinstitutions = tr.xpath(".//td[1]/text()").get()  # 预测机构数
            pmin = tr.xpath(".//td[2]/text()").get()
            pmean = tr.xpath(".//td[3]/text()").get()
            pmax = tr.xpath(".//td[4]/text()").get()
            pindust_average = tr.xpath(".//td[5]/text()").get()  # 行业平均数
            pdper_share = {'eyear': pyear, 'einstitutions': pinstitutions, 'emin': pmin, 'emean': pmean,
                           'emax': pmax, 'eindust_average': pindust_average}
            profit.append(pdper_share)
        item = ForecastsItem(stock_code=stock_code, stock_market=stock_market, stock_name=stock_name,
                             eper_share=json.dumps(eper_share,ensure_ascii=False),profit=json.dumps(profit,ensure_ascii=False),
                             crawl_time=self.crawl_time)
        yield item